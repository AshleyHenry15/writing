[
  {
    "objectID": "best-practices.html#topic-types",
    "href": "best-practices.html#topic-types",
    "title": "Best practices",
    "section": "Topic types",
    "text": "Topic types"
  },
  {
    "objectID": "best-practices.html#docs-first",
    "href": "best-practices.html#docs-first",
    "title": "Best practices",
    "section": "Docs-first",
    "text": "Docs-first"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Technical Writing at Posit",
    "section": "",
    "text": "At Posit, every developer/engineer is also a technical writer.\nThis site is a collection of resources to assist you when creating technical writing for our professional (enterprise) products.\nGet Started"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "The technical writing team includes two writers:\n\nAshley Henry\nName"
  },
  {
    "objectID": "getting-started/philosophy.html",
    "href": "getting-started/philosophy.html",
    "title": "Technical Writing at Posit",
    "section": "",
    "text": "The following information was taken from Write the Docs.\n\nDocumenation as Code (Docs as Code) is an approach to writing and publishing documentation with the same tools and processes developers use to create code:\n\nIssue Trackers\nVersion Control (Git)\nPlain Text Markup (Markdown, reStructuredText, Asciidoc)\nCode Reviews\nTesting\n\nThis means following the same workflows as development teams, and being integrated in the product team. It enables a culture where writers and developers both feel ownership of documentation, and work together to make it as good as possible.\nGenerally a Docs as Code approach gives you the following benefits:\n\nWriters integrate better with development teams.\nDevelopers will often write a first draft of documentation.\nYou can block merging of new features if they don’t include documentation, which incentivizes developers to write about features while they are fresh.\n\n\n\n\n\nThe following information was taken from DIVIO - The documentation system\n\nAlthough we haven’t fully adapted the Divio documentation system, our teams have been slowly incorporating some of the system into our docs.\nSince our documentation doesn’t neatly fit into four buckets as Divio suggests, use the Divio documentation system as a construct when creating new documentation/guides.\nDivio breaks documentation into four categories:\n\nTutorials\nHow-to guides\nTechnical reference\nExplanation.\n\nThey represent four different purposes or functions, and require four different approaches to their creation."
  },
  {
    "objectID": "getting-started/approach.html",
    "href": "getting-started/approach.html",
    "title": "Approaching docs",
    "section": "",
    "text": "Determine:\n\nThe reason for the documentation change/request\nWhat type of documentation is required\nWhere the new documentation should “live”\n\nExisting: Determine where the source code of the current documentation lives\n\nSearch ALL documentation to verify:\n\nIf this is already documented\nHow many places may require an update\nIf other documented features may also require an update based on these changes\n\nCoordinate with the product’s documentation owner. See POC"
  },
  {
    "objectID": "getting-started/approach.html#sdlc---how-should-docs-fit",
    "href": "getting-started/approach.html#sdlc---how-should-docs-fit",
    "title": "Approaching docs",
    "section": "SDLC - How should docs “fit”",
    "text": "SDLC - How should docs “fit”\nWe need to continue to integrate documentation into each team’s SDLC:\n\nDocs is an equal stakeholder that is involved in backlog grooming, planning, development, QA, and release.\nDocumentation consideration from the start ensures that:\n\nThe writer can provide input in the early stages of development which may help make the feature more intuitive for the user.\nThe writer can help scope out the documentation work required.\nThe engineer developing a feature knows what is expected and required for documentation updates and has ample time to write/test documentation.\nThe team has time to scrub existing documentation to make the required changes.\nQA has time to test the feature AND the documentation.\nWe are less likely to have documentation gaps.\n\n\nIf we can lay a solid foundation for SDLC documentation integration, we will be setting up a new writer for success and a much easier/more enjoyable onboarding process."
  },
  {
    "objectID": "getting-started/authoring-tools.html",
    "href": "getting-started/authoring-tools.html",
    "title": "Technical Writing at Posit",
    "section": "",
    "text": "Authoring tools\nOur professional product documentation uses several authoring tools.\nCurrently, we use:\n\nMkDocs - Material\nQuarto\nPandoc Markdown\n\n\n\n\nProduct\nAuthoring tool\n\n\n\n\ndocs.posit.co\nMkDocs Material\n\n\nConnect\nMkDocs Material\n\n\nPackage Manager\nMkDocs Material\n\n\nWorkbench\nQuarto\n\n\nShiny Server Pro\nPandoc Markdown"
  },
  {
    "objectID": "getting-started/getting-started.html",
    "href": "getting-started/getting-started.html",
    "title": "Technical Writing at Posit",
    "section": "",
    "text": "Here at Posit we have both enterprise/commercial professional products and open source products. Our commercial professional products include:\n\nPosit Workbench/RStudio Server Pro\nPosit Connect\nPosit Package Manager\nPosit Team (software bundle)\n\n\n\nThe developers for each product team are responsible for updating and maintaining documentation.\nHowever, documentation hosted at https://docs.rstudio.com (“docs proper”), is typically maintained by the technical writing team with the assistance of the developers.\n\n\n\nA high-level documentation workflow, regardless of your team, should look something like the following:\nPlanning/Grooming:\n\nDoes the development of a feature require documentation?\nSEARCH all of our resources to make sure that it isn’t already documented and/or to find other places that require updates\n\nDocumentation estimates (how many files/places will require updates)\nWhere should this documentation live? Should it live in the product’s admin guide? Does this actually below in a how-to guide on the docs site?\n\nWriting development:\n\nReview our Style Guide and Formatting Standards\nOnce you decide where the doc should live: add, update, and/or remove documentation, if necessary\nValidate/test the documentation (this can be done by the developer/writer/QA)\nOpen a PR (if you haven’t already)\nAssign at least one reviewer for approval\nMerge\n\n\n\n\n\n\n\nImportant\n\n\n\nUse PRs (pull requests) w/ at least one reviewer ALWAYS.\n\n\n\n\n\n\nAdmin: IT Admins\nUser: Data Scientists\nAdmin/User: Data scientists that may have to make changes to the product’s configuration to use certain features\n\n\n\n\nEnergetic: Whether our reader is a new programmer or a seasoned pro, it is so exciting that we get to show them what’s possible with our amazing resources and tools!\nCompassionate/empathetic: Programming can be hard. Readers have different experiences with coding. There are lots of tools and it can be hard to figure which one is the right tool for the job. Our blog posts acknowledges that we are all doing our best to become better in data without being critical of approaches, tools, or backgrounds.\nSimplicity: If our reader has to reread a sentence multiple times, gets stuck on a word, or gets “lost”, then we are missing the mark. Keep sentences simple and short.\n\n\nThe vast majority of our writing should be in an active voice.\nActive = noun/actor + verb + target\nExample: Python interprets code.\n\nnoun/actor: Python\nverb (active): interprets\ntarget: code\n\nPassive = target + verb + noun/actor\n\ntarget: code\nverb (passive): is interpreted\nnoun/actor: Python\n\nExample: Code is interpreted by Python."
  },
  {
    "objectID": "getting-started/location.html",
    "href": "getting-started/location.html",
    "title": "Where should the docs live?",
    "section": "",
    "text": "Where we write/place documentation depends in a few key factors:\n\nThe product and who is responsible for maintaining the content once it is published\nThe type of documentation\nThe product that the documentation covers/belongs to\n\n\n\n\n\n\n\n\nType\nDefinition\n\n\n\n\nAdmin Gude\nAn administrator uses these guides to install, configure, or reference before handing the product off to the user. Generally, anything that may require elevated privileges.\n\n\nUser Guide\nExplanations of features, feature configurations, and step-by-step instructions, examples, etc. User guides tend to be informal and contain standalone topics.\n\n\nQuickStart Guide\nFor users that are familiar with our product, Linux distributions, code languages, etc., and want to accomplish a task as quickly as possible. They can be written in sequential order or as a series of tasks. It should be based on existing documentation.\n\n\nGetting Start Guide\nFor an audience that is unfamiliar with our products, Linux distributions, code languages, etc. These guides provide a more detailed description of what it does, basic concepts, detailed setup instructions, and basic explanations/examples about what they are doing and why. Should be based on existing documentation.\n\n\nInstall Guide\nDescribes the steps that are needed to install our products, provided as a one-off guide.\n\n\nTutorials\nLearning-oriented documentation/videos that teach a user how to do something.\n\n\nHow-to guide Guide\nGoal-oriented documentation that solves a specific problem in a series of steps. Should be based on existing documentation, if applicable."
  },
  {
    "objectID": "guides/doc-requests.html",
    "href": "guides/doc-requests.html",
    "title": "Doc requests",
    "section": "",
    "text": "This topic covers the doc request workflow for “the docs site”.\nIf you need to open a doc request for an individual product guide, reference the Triage page."
  },
  {
    "objectID": "guides/doc-requests.html#the-docs-site",
    "href": "guides/doc-requests.html#the-docs-site",
    "title": "Doc requests",
    "section": "The “docs site”",
    "text": "The “docs site”\n\nWhat is the docs site/docs proper?\n\n“Docs proper” is the source code that lives within the “main” docs.posit.co index directory structure. This differs from our individual professional product guides, which live in the corresponding product’s source code.\nFor example, https://docs.posit.co/rsc/installation/ is hosted at “docs proper”, while https://docs.posit.co/connect/admin/ is hosted within Connect’s source code/repository.\n\nGitHub\n\nCreate an issue in the docs.rstudio GitHub repository here.\nPopulate the Doc Requests issues template.\nMention/assign Ashley.\n\n\n\nSlack\nChannel Name: #docs-rstudio-requests"
  },
  {
    "objectID": "guides/triage.html",
    "href": "guides/triage.html",
    "title": "Triage",
    "section": "",
    "text": "Admin Guide: GitHub repo\nUser Guide: GitHub repo\nRelease Notes: Link to code\n\n\n\n\n\nAdmin, User, API, Cookbook,& Release Notes: GitHub repo\n\n\n\n\n\nAdmin, API, & Release Notes: GitHub repo"
  },
  {
    "objectID": "guides/onboarding/training/github/clone-repo.html",
    "href": "guides/onboarding/training/github/clone-repo.html",
    "title": "Cloning a Repository",
    "section": "",
    "text": "These procedures are for MacOS.\nThis documentation walks you through pulling a remote repository, pulling changes from main, and creating a branch."
  },
  {
    "objectID": "guides/onboarding/training/github/clone-repo.html#prerequisites",
    "href": "guides/onboarding/training/github/clone-repo.html#prerequisites",
    "title": "Cloning a Repository",
    "section": "Prerequisites",
    "text": "Prerequisites\n\nThe following instructions use GitHub Desktop.\nAccess to the docs.rstudio.com repo (Contact Ashley Henry for access requests)"
  },
  {
    "objectID": "guides/onboarding/training/github/clone-repo.html#clone-via-https",
    "href": "guides/onboarding/training/github/clone-repo.html#clone-via-https",
    "title": "Cloning a Repository",
    "section": "Clone via HTTPS",
    "text": "Clone via HTTPS\n\nNavigate to: https://github.com/rstudio/docs.rstudio.com\nCopy the URL: \nOpen GitHub Desktop.\nFrom the File menu, click Clone Repository…: \nDo the following:\n\nIn the Repository URL or GitHub username and repository field, paste the URL that you copied in Step 2. \nIn the Local Path field, either paste, type, or Choose… a location for the cloned repo.\nClick Clone.\n\n\n\n\n\n\n\n\nTip\n\n\n\nA best practice is to create a local GitHub/Repositories dirctory (folder) and save all individual cloned repositories to that folder.\n\n\nOnce all the repository has been cloned locally, you now have local access to all of the directories and files that live in the upstream repo."
  },
  {
    "objectID": "guides/onboarding/training/github/clone-repo.html#pull-main",
    "href": "guides/onboarding/training/github/clone-repo.html#pull-main",
    "title": "Cloning a Repository",
    "section": "Pull main",
    "text": "Pull main\nNow that you have cloned the repository, let’s make sure that you are synced with the main branch.\n\nDo the following:\n\n\nFrom the GitHub Desktop app, verify that the branch that you cloned is selected from the Current Repository drop-down menu.\nFrom the Current Branch drop-down menu, select main.\nClick Fetch origin.\n\n\nIf main has changes that you do not have locally, the Fetch origin button will display a Pull option with a count of the number of changes that you are behind main. Go ahead and click that button to pull the latest changes to sync with themain` upstream branch."
  },
  {
    "objectID": "guides/onboarding/training/github/clone-repo.html#create-a-branch",
    "href": "guides/onboarding/training/github/clone-repo.html#create-a-branch",
    "title": "Cloning a Repository",
    "section": "Create a branch",
    "text": "Create a branch\n\nOpen GitHub Desktop.\nClick the Current Branch drop-down menu and select New Branch. \nAdd a name for your branch and click Create Branch. \n\nYour new branch is automatically selected in the Current Branch drop-down menu.\nWhen you make a local change, you can commit the change, publish/push changes upstream to your branch in GitHub."
  },
  {
    "objectID": "guides/onboarding/software.html",
    "href": "guides/onboarding/software.html",
    "title": "Recommended Software",
    "section": "",
    "text": "This software list is recommended for members of the technical writing team.\n\nFor macOS\n\n\nVisual Studio Code\nGitHub Desktop\nDocker Desktop\n\nInstall docs\n\nSnagit\n\nRequest license\n\nRStudio"
  },
  {
    "objectID": "writing/doc-rules.html",
    "href": "writing/doc-rules.html",
    "title": "Technical Writing at Posit",
    "section": "",
    "text": "Consistency & shared vocabulary Utilize this guide to help our documentation become consistent and to assist our teams to write with a unified voice.\n\n\nIf possible, avoid duplicating documentation. If you need to reuse information:\n\nUse language that may not need to be updated frequently and add a link to the full documentation\nUse cross-references & links\nUse snippets\n\n\n\n\nBe direct and avoid fluff. Keep our documentation transparent, easy to read, efficient, and search-friendly. Keep the topics and sentences simple, short, and concise. Do not write over our audience’s head or write drastically under it.\nTest its readability here: Readability Test Tool\n\n\n\nWe should aspire to provide documentation that is helpful and easy for everyone to use. When planning, writing, and reviewing documentation, take the time to consider that someone may be using a screen reader to listen to our documentation. For example, ensure that you are writing documentation that is clear and isn’t relying on images to explain an action.\nPlease review our Product Accessibility in a Nutshell documentation.\n\n\n\nClaims should capture what our products and company can, and cannot do. We do not want to make false promises to our customers and there is no need to state that we may support something in the future. We are supporters of the open-source community and have an interdependent relationship with the open source community.\n\n\n\n\nFollow a general template to help standardize our documentation.\nSee topic structure/template.\n\n\n\n\nInsert new content in the most logical or intuitive section of the guide.\nDo not just “stick it at the bottom”.\n\n\n\n\nInconsistent names for the same object may confuse our users. Use consistent names whenever you:\n\nIntroduce a new feature.\nRefer to an existing feature.\nRefer to a specific UI item.\nUpdate existing documentation.\n\n\n\n\n\n\n\nImportant\n\n\n\nBe sure to search ALL of our documentation to ensure that your product/menu/UI naming is consistent. The Product names and open source product names reference is shown below.\n\n\n\n\nRefer to menus, buttons, elements, etc., exactly how they are displayed in the UI. For example, if there is a SUBMIT button, then it would be in ALL CAPS (and bolded) in the documentation.\n\n\n\n\nClick to view full-sized/zoomed in UI Elements Image\n\n\n\n\nWhen you refer to a specific package in R, use the actual capitalization of the package name (which is usually lowercase, but not always). Follow this rule even if the package name appears at the beginning of a sentence. Why? Because the package name is actual code that the user may type into R; incorrect capitalization could cause an error. Example: ggvis or ggplot2.\nWhen you describe a general product/framework that RStudio has developed, like Shiny or R Markdown, use the RStudio capitalization of the product name. It does get tricky, but here is a heuristic: if you are praising a product to a general audience, go with R Markdown; if you are instructing programmers on how to do something, go with rmarkdown."
  },
  {
    "objectID": "writing/style-guide.html",
    "href": "writing/style-guide.html",
    "title": "Style Guide",
    "section": "",
    "text": "This guide serves as a reference for anyone authoring, editing, or reviewing the pro-product documentation."
  },
  {
    "objectID": "writing/style-guide.html#grammar",
    "href": "writing/style-guide.html#grammar",
    "title": "Style Guide",
    "section": "Grammar",
    "text": "Grammar\n\nActive/passive voice\n\nAvoid passive voice unless it is unavoidable.\nUse the active form of nouns (displays -not- displayed).\n\nPer the Microsoft Manual of Style:\n\nActive voice emphasizes the person or thing performing the action.\nIt’s more direct than passive voice, which can be confusing or sound formal.\n\n\n\n\n\n\n\nTip\n\n\n\nPlease review the Posit Voice section for additional information.\n\n\n\n\nParentheses\nAPA Style 6th Edition:\n\nPunctuation goes inside of parentheses when the entire sentence is enclosed in the parentheses.\nPunctuation goes outside of parentheses when only a portion of a sentence is enclosed in parentheses.\n\n\n\nContractions\nAvoid\n\n\nQuotation marks\nPunctuation - (inside vs. outside):\n\nInside quotation marks. Piece of code = outside.\nExamples:\n\ngrammar: “My friend Mary,” she said, “is crazy!”\n\ncode: To start the program, run runApp.\n\n\n\n\nOxford (serial) comma\n\nInclude the final comma in a list of three or more items. The cat liked to jump, eat, and meow.\n\n\n\nDashes\n\nEn dash vs. Em dash:\n\nEn dash: A dash the width of an “n”. Use for ranges or spans of numbers.\nEm dash: A dash the width of an “m”. Can take the place of colons.\n\n\n\n\ni.e. vs. e.g.\n\ni.e.: In other words\ne.g.: For example\n\n\n\netc.\n\nWhen used in the middle of a sentence, and is not enclosed in parentheses, include a period and a comma after the abbreviation.\nIf used at the end of a sentence, simply use a period.\nIf enclosed in a parentheses and is at the end of the sentence, use a period. No comma is needed."
  },
  {
    "objectID": "writing/style-guide.html#content",
    "href": "writing/style-guide.html#content",
    "title": "Style Guide",
    "section": "Content",
    "text": "Content\n\nTitles and headings\n\nTitles and H1s: Title Case\nAll other headings: Sentence case\n\n\n\n\n\n\n\nSteps as headings\n\n\n\n\n\nEspecially for docs.posit.co - proper:\n\nIf you are going to use a heading to represent a step/procedure, then the name of the heading should include the word “Step”.\nFor example, an H2 representing a step/procedure would be written as, “Step 1: Install RStudio Connect”.\n\nThis is extremely important from an Accessibility perspective, especially for those who may be using a screen reader to listen to our documentation.\n\n\n\n\n\nCallouts\nCallouts, sometimes referred to as “admonitions”, are used to draw attention to content and/or information that doesn’t fit into the normal flow of text.\nQuarto and MkDocs Material offer different types of callouts. The following definitions are common between both tools:\n\n\n\nCallout type\nDefinition\n\n\n\n\nnote\n\n\n\n\n\n\n\n\n\n\nProper nouns and UI elements\n\nAre always capitalized.\nHowever, always follow the same capitalization format that is displayed in the UI when referring to product screens directly.\n\nFor example, if a menu name isn’t capitalized in the UI, write it exactly as it appears. If it is in all caps, use all caps when referencing it in the docs.\n\n\n\n\nProcedures/steps\nAction → Result should always be part of the action step\nExamples:\n\nClick OK. A dialog displays.\nThe configuration section allows you to configure your product. Deleting this file may result in a loss of data.\n\n\nProcedure formatting definitions\nThe checklist and formatting style guide has examples of when to use this formatting here.\n\n\n\n\n\n\n\nFormatting\nDefinition\n\n\n\n\nBold\nThe name of any button, panel, field, drop-down, etc., should be bolded.\n\n\nItalics\nUse as a placeholder, for emphasis, or for mathematical constants and variables.\n\n\nQuotes\nUse quotes when instructing the user to type something specific.\n\n\n\n\n\n\nLists\n\nBulleted lists:\n\nEnding punctuation: Be consistent. For each item in a list, stick to using ending punctuation or don’t use it at all.\nIf there are two items/steps or fewer, then use bullet points or nothing at all.\nWhen giving a user multiple options, for example:\n\nTo install RStudio, do one of the following:\n\nManual installation\nGuided installation\n\n\n\n\n\nNumbered lists\n\nUse ending punctuation.\nUse when a procedure needs to be specifically referenced.\nUse to describe things that need to be done in a sequential order\n\nPlease see Procedures/steps for more information.\n\n\n\nCalls to code\nCalls to R, Python code, shell commands, & other languages.\nDenote calls with the accent grave (example: runApp). Use the accent marks/backticks wherever appropriate. Ensure that the text within already written accent marks exactly matches the code, since it may change how code is run and result in errors.\nIf the documentation framework doesn’t support accent graves, use code blocks, inline code, or whatever the framework supports.\n\n\nGerunds & Tech jargon\nAvoid.\n\n\nNumbers\nAs a general rule, spell out single-digit numbers, and use numerals to represent double-digit numbers, e.g., one and. 10.\n\n\nAcronyms\n\nSpell out the first occurrence of an acronym per topic/page/file, followed by the acronym in parentheses.\nYou do not need to define common acronyms, such as IP.\n\nExample: - The Central Intelligence Agency (CIA) is a civilian foreign intelligence service of the federal government of the United States. The CIA has no law enforcement function."
  },
  {
    "objectID": "writing/prod-release-checklist.html",
    "href": "writing/prod-release-checklist.html",
    "title": "Docs Site - Product Release Checklist",
    "section": "",
    "text": "This is a checklist for each professional product to ensure that all updates to the docs.rstudio.com site are complete prior to a minor or major release.\n\n\n\n\n\n\nImportant\n\n\n\nThis checklist does NOT cover each file that may need to be updated. Instead, the files listed below probably provide content, such as installation commands, that are version-specific and are more likely to require an update for a release."
  },
  {
    "objectID": "writing/prod-release-checklist.html#workbench",
    "href": "writing/prod-release-checklist.html#workbench",
    "title": "Docs Site - Product Release Checklist",
    "section": "Workbench",
    "text": "Workbench\n\n\n\n\n\n\nExpand for checklist\n\n\n\n\n\n\n Product Configuration Overview table:\n\nURL: https://docs.rstudio.com/configuration/\nFile path: https://github.com/rstudio/docs.rstudio.com/blob/master/docs/configuration.md\n\n Requirements: \n\nURL: https://docs.rstudio.com/rsp/requirements/\nFile path: https://github.com/rstudio/docs.rstudio.com/blob/master/docs/rsp/requirements.md\n\n Installation:\n\nURL: https://docs.rstudio.com/rsp/installation/\nFile path: https://github.com/rstudio/docs.rstudio.com/blob/master/docs/rsp/installation.md\n\n Upgrade:\n\nURL: https://docs.rstudio.com/rsp/upgrade/\nFile path: https://github.com/rstudio/docs.rstudio.com/blob/master/docs/rsp/upgrade.md\n\nConfiguration:\n Active Directory\n\nURL: https://docs.rstudio.com/rsp/configuration/authentication/active-directory/\nFile path: https://github.com/rstudio/docs.rstudio.com/blob/master/docs/rsp/configuration/authentication/active-directory.md\n\nIntegration:\n Python:\n\nURL: https://docs.rstudio.com/rsp/integration/python/\nFile path: https://github.com/rstudio/docs.rstudio.com/blob/master/docs/rsp/integration/python.md\n\n Launcher Slurm:\n\nURL: https://docs.rstudio.com/rsp/integration/launcher-slurm/\nFile path: https://github.com/rstudio/docs.rstudio.com/blob/master/docs/rsp/integration/launcher-slurm.md\n\nSupport\n Rollback\n\nURL: https://support.rstudio.com/hc/en-us/articles/360062132513\n\n All Documentation:\nPlease check the All Versions drop-down and add the most recent version of applicable documentation guides.\n\nURL: https://docs.rstudio.com/rsp/documentation\nFile path: https://github.com/rstudio/docs.rstudio.com/blob/master/docs/rsp/documentation.md\n\n Troubleshooting:\n\nURL: https://docs.rstudio.com/troubleshooting/launcher-kubernetes/\nFile path: https://github.com/rstudio/docs.rstudio.com/tree/master/docs/troubleshooting"
  },
  {
    "objectID": "writing/prod-release-checklist.html#connect",
    "href": "writing/prod-release-checklist.html#connect",
    "title": "Docs Site - Product Release Checklist",
    "section": "Connect",
    "text": "Connect\n\n\n\n\n\n\nExpand for checklist\n\n\n\n\n\n\n Product Configuration Overview table: \n\nURL: https://docs.rstudio.com/configuration/\nFile path: https://github.com/rstudio/docs.rstudio.com/blob/master/docs/configuration.md\n\n Requirements: \n\nURL: https://docs.rstudio.com/rsc/requirements/\nFile path: https://github.com/rstudio/docs.rstudio.com/blob/master/docs/rsc/requirements.md\n\nInstallation:\n Setup tool:\n\nURL: https://docs.rstudio.com/rsc/installation/\nFile path: https://github.com/rstudio/docs.rstudio.com/blob/master/docs/rsc/installation.md\n\n Manual:\n\nURL: https://docs.rstudio.com/rsc/manual-install/\nFile path: https://github.com/rstudio/docs.rstudio.com/blob/master/docs/rsc/manual-install.md\n\n Upgrade:\n\nURL: https://docs.rstudio.com/rsc/upgrade/\nFile path: https://github.com/rstudio/docs.rstudio.com/blob/master/docs/rsc/upgrade.md\n\nIntegration:\n Python:\n\nURL: https://docs.rstudio.com/rsc/integration/python/\nFile path: https://github.com/rstudio/docs.rstudio.com/blob/master/docs/rsc/integration/python.md\n\n TensorFlow:\n\nURL: https://docs.rstudio.com/rsc/integration/tensorflow/\nFile path: https://github.com/rstudio/docs.rstudio.com/blob/master/docs/rsc/integration/tensorflow.md\n\n All Documentation:\nPlease check the All Versions drop-down and add the most recent version of applicable documentation guides.\n\nURL: https://docs.rstudio.com/rsc/documentation/\nFile path: https://github.com/rstudio/docs.rstudio.com/blob/master/docs/rsc/documentation.md\n\n How To Guides:\n\nURL: https://docs.rstudio.com/how-to-guides/\nFile path: https://github.com/rstudio/docs.rstudio.com/blob/master/docs/how-to-guides/index.md\n\n Tutorials:\n\nURL: https://docs.rstudio.com/tutorials/\nFile path: https://github.com/rstudio/docs.rstudio.com/tree/master/docs/tutorials"
  },
  {
    "objectID": "writing/prod-release-checklist.html#package-manager",
    "href": "writing/prod-release-checklist.html#package-manager",
    "title": "Docs Site - Product Release Checklist",
    "section": "Package Manager",
    "text": "Package Manager\n\n\n\n\n\n\nExpand for checklist\n\n\n\n\n\n\n Product Configuration Overview table: \n\nURL: https://docs.rstudio.com/configuration/\nFile path: https://github.com/rstudio/docs.rstudio.com/blob/master/docs/configuration.md\n\n Requirements: \n\nURL: https://docs.rstudio.com/rpm/requirements/\nFile path: https://github.com/rstudio/docs.rstudio.com/blob/master/docs/rpm/requirements.md\n\n Installation:\n\nURL: https://docs.rstudio.com/rpm/installation/\nFile path: https://github.com/rstudio/docs.rstudio.com/blob/master/docs/rpm/installation.md\n\n Upgrade:\n\nURL: https://docs.rstudio.com/rpm/upgrade/\nFile path: https://github.com/rstudio/docs.rstudio.com/blob/master/docs/rpm/upgrade.md\n\n All Documentation:\nPlease check the All Versions drop-down and add the most recent version of applicable documentation guides.\n\nURL: https://docs.rstudio.com/rpm/documentation/\nFile path: https://github.com/rstudio/docs.rstudio.com/blob/master/docs/rpm/documentation.md"
  },
  {
    "objectID": "writing/prod-release-checklist.html#pro-drivers",
    "href": "writing/prod-release-checklist.html#pro-drivers",
    "title": "Docs Site - Product Release Checklist",
    "section": "Pro Drivers",
    "text": "Pro Drivers\n\n\n\n\n\n\nExpand for checklist\n\n\n\n\n\n\n Requirements:\n\nURL: https://docs.rstudio.com/pro-drivers/requirements/\nFile path:  https://github.com/rstudio/docs.rstudio.com/blob/master/docs/pro-drivers/requirements.md\n\n Installing Pro Drivers:\n\nURL: https://docs.rstudio.com/pro-drivers/installation/\nFile path: https://github.com/rstudio/docs.rstudio.com/blob/master/docs/pro-drivers/installation.md\n\n Desktop Install:\n\nURL: https://docs.rstudio.com/pro-drivers/desktop-install/\nFile path: https://github.com/rstudio/docs.rstudio.com/blob/master/docs/pro-drivers/desktop-install.md\n\n Linux:\n\nURL: https://docs.rstudio.com/pro-drivers/install-method/linux/\nFile path: https://github.com/rstudio/docs.rstudio.com/blob/master/docs/pro-drivers/install-method/linux.md\n\n Mac:\n\nURL: https://docs.rstudio.com/pro-drivers/install-method/macOS/\nFile path: https://github.com/rstudio/docs.rstudio.com/blob/master/docs/pro-drivers/install-method/macOS.md\n\n Windows:\n\nURL:  https://docs.rstudio.com/pro-drivers/install-method/windows/\nFile path: https://github.com/rstudio/docs.rstudio.com/blob/master/docs/pro-drivers/install-method/windows.md"
  },
  {
    "objectID": "writing/planning.html",
    "href": "writing/planning.html",
    "title": "Technical Writing at Posit",
    "section": "",
    "text": "This document provides an outline that you should review and implement prior to Workbench, Connect, Package Manager, and docs.rstudio.com documentation tasks.\n\n\n\n\n\n\nWant a fillable template?\n\n\n\n\n\nCheck out the RStudio, PBC template gallery: Enterprise Doc Planning Template\n\n\n\nBefore you write:\nALWAYS search existing documentation, topics, and all internal resources (don’t forget about Support Articles and the Solutions site). Then ask: - Is this a new topic or updates to an existing topic? - Take note of topics that may need to be updated and/or deleted based on your doc changes. - Search the doc for existing verbiage that you may be able to use or base your changes on. This may help with consistency and standardization. - Avoid duplication; use Snippets, links, iframes, etc.\n\n\nShould this be a product-improvement task vs. a documentation update?\n\nProduct improvement requests should be brought to the development team for discussion and next steps.\n\n\n\n\nWhy are we writing this documentation?\nWhat problem(s) does the documentation address?\n\n\n\n\n\nWhat assumptions can be made?\n\nE.g.: Is the target audience an IT Admin with Linux knowledge, or a data scientist that may not have experience with Linux or have elevated privileges?\n\n\n\n\n\n\n\nWhat team is responsible for development/product team?\nWhen to involve them?\n\nEarly! As soon as you identify a documentation task, ping the team to determine where they are in their release schedule, if someone may already be making these updates, resources, timelines, etc.\n\n\n\n\n\n\nE.g.: Is this a companion guide for the Setup Tool or reference style documentation for the Admin Guide?\nThe Divio Documentation System is a great resource: https://documentation.divio.com/\n\n\n\n\n\nIdentify what product the documentation updates belong to\nThen, determine if this is an Admin Guide update vs. a Support artice, etc.\n\n\n\n\n\nHow much content needs to be created/changed/updated/deleted?\nDo we need to wait for development to be complete before we can begin writing?\nOther considerations:\n\nE.g.: Does the content require us to update 10 UI/product screenshots and do I have access to an environment?\nE.g.: Will the changes break links? If so, how long will these changes take, when can they be completed, and who is responsible for these changes?\nWhat type of review do we need and how long will the review take?\n\n\n\n\n\n\nWhat needs to be accomplished to consider this task as “complete”?\nHow can we validate/test the documentation?\nWho needs to review the documentation?\nWhat are potential blockers?\n\n\n\n\n\nIs there follow-up documentation tasks?\n\nHow do we make sure that these aren’t forgotten?\n\nopen up and follow-up issues to make sure that the work isn’t lost? Do we need to notify other teams of these changes?"
  },
  {
    "objectID": "getting-started/prod-docs.html",
    "href": "getting-started/prod-docs.html",
    "title": "Pro Product Docs Overview",
    "section": "",
    "text": "Warning\n\n\n\nThis page is a partial duplicate of the GitHub docs.rstudio.com/README."
  },
  {
    "objectID": "getting-started/prod-docs.html#docs.rstudio.com",
    "href": "getting-started/prod-docs.html#docs.rstudio.com",
    "title": "Pro Product Docs Overview",
    "section": "docs.rstudio.com  ",
    "text": "docs.rstudio.com  \nActs as a “home base” for new professional product users and professional product documentation focused on initial installations, configurations, and integrations."
  },
  {
    "objectID": "getting-started/prod-docs.html#documentation-build",
    "href": "getting-started/prod-docs.html#documentation-build",
    "title": "Pro Product Docs Overview",
    "section": "Documentation Build",
    "text": "Documentation Build\nThe documentation is stored and hosted in an Amazon S3 bucket named docs.rstudio.com, which is associated with a CloudFront CDN distribution.\ndocs.rstudio.com is the index at the root of the directories that make up the docs.rstudio.com Amazon S3 bucket. Since docs.rstudio.com/index.html is at the root of these directories, this is the page that displays when you navigate to the docs.rstudio.com URL.\n\n\n\n\n\n\nFeel free to take a look at the structure of the docs S3 bucket.\n\n\n\nThe docs.rstudio.com S3 bucket also hosts the directories for the rest of our professional product documentation:\n\nWorkbench guides\nConnect guides\nPackage Manager guides and\nOther content that you access with the base URL of docs.rstudio.com.\n\n\n\n\n\n\n\nExample\n\n\n\nThe docs.rstudio.com/rsc/installation page’s source code lives within the main docs.rstudio.com index directory structure. The source code for this page lives at: https://github.com/rstudio/docs.rstudio.com.\nHowever, docs.rstudio.com/connect/admin does NOT live within the main docs.rstudio.com directory structure. The source code is available at: https://github.com/rstudio/connect.\nEssentially, we “drop” the professional product documentation files (HTML/JS/CSS) into subdirectories, like /connect.  \n\n\n\nHow it builds\nJenkins or a GitHub (GH) action builds the documentation at the source and then drops the finished HTML/JS/CSS into a specific directory of the S3 bucket, for example, /connect.\nNow, the finished documentation is available via the docs.rstudio.com/connect URL even though the source code of the documentation does not live in the docs.rstudio.com GH repository."
  },
  {
    "objectID": "getting-started/prod-docs.html#pro-product-doc-source-code",
    "href": "getting-started/prod-docs.html#pro-product-doc-source-code",
    "title": "Pro Product Docs Overview",
    "section": "Pro product doc source code",
    "text": "Pro product doc source code\nFor a list of Professional Products Guides, documentation URLs, and source code, please see the docs.rstudio.com/README"
  },
  {
    "objectID": "getting-started/prod-docs.html#product-doc-site-map",
    "href": "getting-started/prod-docs.html#product-doc-site-map",
    "title": "Pro Product Docs Overview",
    "section": "Product Doc Site Map",
    "text": "Product Doc Site Map\nClick image to zoom.\n\n\nHere is a link to the source of the site map shown above (this doesn’t include all sources within the docs.rstudio S3 bucket):"
  },
  {
    "objectID": "getting-started/prod-docs.html#misc",
    "href": "getting-started/prod-docs.html#misc",
    "title": "Pro Product Docs Overview",
    "section": "Misc",
    "text": "Misc\n\nDoc Resources\n\nPlanning Guide\nDocumentation Style Guide\nFormatting & Syntax\nProduct Release Checklist\n\n\n\nSeeking another RStudio doc?\nYou may be looking for documentation that lives outside of the docs.rstudio.com S3 bucket:\n\n\n\n\n\n\n\nURL\nSource Code\n\n\n\n\nrstudio.com\nhttps://github.com/rstudio/rstudio.com \n\n\ndb.rstudio.com\nhttps://github.com/rstudio/db.rstudio.com \n\n\nsolutions.rstudio.com\nhttps://github.com/rstudio/solutions.rstudio.com\n\n\nshinyapps.io user guide\nhttps://github.com/rstudio/shinyapps-users-guide"
  }
]